name: CVE Dependency Scan

on:
  schedule:
    - cron: '0 0 * * *'  # TÃ¤glicher Ablauf (0 Uhr UTC)
  workflow_dispatch:  # Manuelles Triggern des Workflows

jobs:
  scan:
    name: Scan for CVEs in Dependencies
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      
      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Trivy
        run: |
          sudo apt-get install wget gnupg &&
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg > /dev/null &&
          echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb generic main" | sudo tee -a /etc/apt/sources.list.d/trivy.list &&
          sudo apt-get update &&
          sudo apt-get install trivy

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: "fs"
          scan-ref: .
          format: 'template'
          template: "@html.tpl"


      - name: Upload HTML Report as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: cve-report
          path: cve-report.html

  deploy:
    name: Deploy HTML Report to Web Server
    runs-on: ubuntu-latest
    needs: scan

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Import HTML Report Artifact
        uses: actions/download-artifact@v3
        with:
          name: cve-report

      - name: Copy files via SCP action
        uses: appleboy/scp-action@master
        with:
            host: dhbw.hoenle.xyz
            username: group2
            key: ${{ secrets.PRIVATE_SSH }}
            source: "./cve-report.html"
            target: "/var/www/group2/"
